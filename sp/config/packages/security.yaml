security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: null }
        users:
            entity:
                class: App\Entity\Ausers
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            #anonymous: lazy
            pattern: ^/
            security: true
            anonymous: ~
            # logout_on_user_change: true
            form_login:
                provider: users
                csrf_token_generator: security.csrf.token_manager
                success_handler: app.security.authentication_handler
                failure_handler: app.security.authentication_handler
            logout:
                path: /logout
                success_handler: app.security.logout_handler
                invalidate_session: false
            remember_me:
                secret:   '%kernel.secret%'
                path:     /
                lifetime: 31449600 # 52 weeks in secondslifetime: 604800 # 1 week in seconds

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    encoders:
        App\Entity\Ausers: { algorithm: bcrypt }
