Кажется, я так и не буду писать на es6 (
Уж очень хочется скрестить qdjsFM и webUsb


Далее 
      Пи аплоаде в корень Загрузки создаестя N раз
      Логин по Enter
       - Quick
       - LP
       - Reset
      При отправки логина и пароля, регистрации, сброса мыла не отправлять хотя бы пустую форму.
        На быстром логине вроде бы ок. Полноценную js валидацию пока не решил, нужна или нет.
         Скорее нет, зачем, если есть серверная.
      Синхронизация закладок.
      Нотификации (чтобы все точно узнали о выходе k версии)
      Дизейбл всех кликалок, пока не пришел ответ с сервера (? а надо ли ?).
      Наш сайт использует куки - если не согласился, не давать использовать
      Диалоги надо активировать при клике на body а не только title.
      Скачивание (попытка) не расшаренного файла - нет сообщения.
      Наш сайт использует куки - w и fd версии если не согласился, не давать использовать.
      

проверить в Хроме

------------
Какой должна быть удобная библиотека для работы с файлами из браузера?

Из браузера можно работать с четырьмя видами файлов:
 -  Размещенными на сервере, если сайт предоставляет api для их редактирования.
 -  Выбранными через FileInput
 -  На ограниченной области диска (так называемая в некоторых источниках "песочница")
 - "Виртуальными" (моя терминология для "текстовых файлов" в localStorage и куках)
 
Удобно использовать привычный FS.writefile/readfile.
Если при этом FS = LandFileInputFS
 или FS = LandSandboxFS
 или FS = LandLocalStorageFS
 или FS = LandCookieFS
 
И у всех них есть привычные readfile/writefile
 (+ по возможности open, gets, puts, close).
 
А теперь посмотрим, что у нас есть уже на эту тему.
Есть каталог filesystem с точно не законченной доработкой для GUI
 (кажется, там была попытка реализовать открытие диалога без использования инпута, 
  я не помню сейчас, возможно ли это)
 и неизвестно, законченной ли наработкой для "песочницы" landfilemanager.js.
 
Итого, поскольку мы собрались работать через file input
 кладем рядом LandFileInputFS


