Кажется, я так и не буду писать на es6 (
Уж очень хочется скрестить qdjsFM и webUsb


Далее 

      Перепиши
https://help.mail.ru/legal/terms/cloud/LA
и не парься.

Согласие на обработку персональных данных. 
Согласие на приём рекламы.
 - Найти пример и загрузить.
  https://docs.ozon.ru/common/pravila-prodayoi-i-rekvizity/soglasie-na-reklamy/?country=RU

      
      Донаты
       Определиться, есть ли отечественные сервисы.
        - Есть
       Не стало ли нужно платить налоги.
        - Нет.
       
      Показ рекламы.
       Можно ли этим заниматься как самозанятому?
        - Да, например VK реклама.
        https://ads.vk.com/help/partner/partner_start/partner_self_employed#tax
        
        Но надо сначала зарекламироваться (набрать 5К в месяц.).
         https://ads.vk.com/help/articles/moderation
       Ерир.
       
      
      WebDav
       1 Добавляем поля:																*
           - wd_path - путь на диске web_dav. Важно, он будет один и навсегда.
           - wd_public - 1 если успешный public
           - wd_link - записываем общую ссылку на файл.
           
       2 Скрипт.																		*
          1 Выбирает все неудаленные, у кого wd_public != 1
          2 Смотрит текущий локальный path
          3 Создает такой же на wd
          4 Закачивает файл
              Сначала малый
              Потом скачивает малый
              Потом закачивает реальный.
              
       2.1 Перед аплоадом получаем скан, сравниваем md5. Если сходятся, то считаем что ок. *
              <d:getcontentlength></d:getcontentlength>
      
      3 Get Link если видит, что файл закачан на диск возвращает public ссылку			*
       - Доделать, пусть клиент открывает яндексы в новой вкладке
      
      4      WUSB_WD_USR=lamzin.a.m.d													*
				WUSB_WD_PWD=vyqpsothpppwzxqe
				
	  5 Не премещать файлы, если в каталоге есть файл config.json и владелец админ.		*
	  
	  6 Записывать в wd_error последний ошибочный ответ wd								*
	  
	  7 POSIX!!! и уже потом в крон															*
	  
	  8 Erased не забыть!																*
			
	* * * * * cd /var/www/qp2tru52/data/www/andryuxa.ru/sp && php bin/console app:mwd_dwd
	* * * * * cd /var/www/qp2tru52/data/www/andryuxa.ru/sp && php bin/console app:rmwd
	* * * * * cd /var/www/qp2tru52/data/www/andryuxa.ru/sp && php bin/console app:pblwd
			
			
			
     
     Написать в соглашении max_upload_file_size
     Написать, что Пользователь понимает, что файлы лежат на Фндекс дитске в открытом доступе.
      
      Вынести в отдельный сайт. 
       Тупо удаляем всю нагенеренную статику, все vue не относящееся к диску.
       Бэкенд можно оставить, возни меньше.
       Увеличиваем допустимое количество пользователей.
       Конфиг, имя сайта, мейлы и т п.
       С главной редирект на /d/drive.
       Или сделать там более подробный лендинг?
        С учетом сео.
        Кажется что да.
      Хостинг. Уже конкретно определиться.
      Домен. Уже конкретно определиться.
      В ПС установить нормальную ссылку на сайт и Компанию
      
      Занести их в ПС.
      
      Мейлы ещё раз протестить.
      
      

проверить в Хроме

----
После k-version

Нотификации (чтобы все точно узнали о выходе k версии)
       - Уведомление на рабочий стол не нужно - понижает доверие к незнакомому Ламзину Андрею.
          (Если будут пользоваться, то итак увидят)
       - Конечно должна быть кнопка "Не показывать мне снова".
       - Оформляем конечно в виде модалки.
       - Должна быть таблица
          - drv_message
             id
             msg
             target_vers

          - drv_msg_user
             msg_id, user_id, is_dismiss
      
      
       В target_vers w,pc например. Соответственено показываем на /w и/pc
       dast вернет всегда сообщение для авторизованного,  если оно не dismiss
       А мы его покажем, если версия подходящая.
       Через 15 секунд после dast
       
     Подумать: если у нас все так круто с обновлениями (станет), то это можно и после k версии сделать. Разве нет?


 ИИ для модерации, но это лишь потом.
------------
Какой должна быть удобная библиотека для работы с файлами из браузера?

Из браузера можно работать с четырьмя видами файлов:
 -  Размещенными на сервере, если сайт предоставляет api для их редактирования.
 -  Выбранными через FileInput
 -  На ограниченной области диска (так называемая в некоторых источниках "песочница")
 - "Виртуальными" (моя терминология для "текстовых файлов" в localStorage и куках)
 
Удобно использовать привычный FS.writefile/readfile.
Если при этом FS = LandFileInputFS
 или FS = LandSandboxFS
 или FS = LandLocalStorageFS
 или FS = LandCookieFS
 
И у всех них есть привычные readfile/writefile
 (+ по возможности open, gets, puts, close).
 
А теперь посмотрим, что у нас есть уже на эту тему.
Есть каталог filesystem с точно не законченной доработкой для GUI
 (кажется, там была попытка реализовать открытие диалога без использования инпута, 
  я не помню сейчас, возможно ли это)
 и неизвестно, законченной ли наработкой для "песочницы" landfilemanager.js.
 
Итого, поскольку мы собрались работать через file input
 кладем рядом LandFileInputFS


